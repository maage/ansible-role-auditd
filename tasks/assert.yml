---

- name: Test if auditd_buffer_size is set correctly
  ansible.builtin.assert:
    that:
      - auditd_buffer_size is defined
      - auditd_buffer_size is number
      - auditd_buffer_size >= 0
      - auditd_buffer_size <= 65000

- name: Test if auditd_fail_mode is set correctly
  ansible.builtin.assert:
    that:
      - auditd_fail_mode is defined
      - auditd_fail_mode is number
      - auditd_fail_mode in [ 0, 1, 2 ]

- name: Test if auditd_maximum_rate is set correctly
  ansible.builtin.assert:
    that:
      - auditd_maximum_rate is defined
      - auditd_maximum_rate is number
      - auditd_maximum_rate >= 0

- name: Test if auditd_enable_flag is set correctly
  ansible.builtin.assert:
    that:
      - auditd_enable_flag is defined
      - auditd_enable_flag is number
      - auditd_enable_flag in [ 0, 1, 2 ]

- name: Test if auditd_local_events is set correctly
  ansible.builtin.assert:
    that:
      - auditd_local_events is defined
      - auditd_local_events is string
      - auditd_local_events|lower in [ "yes", "no" ]

- name: Test if auditd_write_logs is set correctly
  ansible.builtin.assert:
    that:
      - auditd_write_logs is defined
      - auditd_write_logs is string
      - auditd_write_logs|lower in [ "yes", "no" ]

- name: Test if auditd_log_file is set correctly
  ansible.builtin.assert:
    that:
      - auditd_log_file is defined
      - auditd_log_file is string

- name: Test if auditd_log_group is set correctly
  ansible.builtin.assert:
    that:
      - auditd_log_group is defined
      - auditd_log_group is string

- name: Test if auditd_log_format is set correctly
  ansible.builtin.assert:
    that:
      - auditd_log_format is defined
      - auditd_log_format is string
      - auditd_log_format|lower in [ "enriched", "nolog", "raw" ]

- name: Test if auditd_flush is set correctly
  ansible.builtin.assert:
    that:
      - auditd_flush is defined
      - auditd_flush is string
      - auditd_flush|lower in [ "none", "incremental", "incremental_async", "data", "sync" ]

- name: Test if auditd_freq is set correctly
  ansible.builtin.assert:
    that:
      - auditd_freq is defined
      - auditd_freq is number
      - auditd_freq >= 0

- name: Test if auditd_max_log_file is set correctly
  ansible.builtin.assert:
    that:
      - auditd_max_log_file is defined
      - auditd_max_log_file is number
      - auditd_max_log_file > 0

- name: Test if auditd_num_logs is set correctly
  ansible.builtin.assert:
    that:
      - auditd_num_logs is defined
      - auditd_num_logs is number
      - auditd_num_logs > 0
      - auditd_num_logs < 99

- name: Test if auditd_priority_boost is set correctly
  ansible.builtin.assert:
    that:
      - auditd_priority_boost is defined
      - auditd_priority_boost is number
      - auditd_priority_boost in [ 0, 1, 2, 3, 4 ]

- name: Test if auditd_name_format is set correctly
  ansible.builtin.assert:
    that:
      - auditd_name_format is defined
      - auditd_name_format is string
      - auditd_name_format|lower in [ "none", "hostname", "fqd", "numeric", "user" ]

- name: Test if auditd_max_log_file_action is set correctly
  ansible.builtin.assert:
    that:
      - auditd_max_log_file_action is defined
      - auditd_max_log_file_action is string
      - auditd_max_log_file_action|lower in [ "ignore", "syslog", "suspend", "rotate" ]

- name: Test if auditd_space_left is set correctly
  ansible.builtin.assert:
    that:
      - auditd_space_left is defined
      - auditd_space_left is number
      - auditd_space_left >= 0
      - auditd_space_left <= 100

- name: Test if auditd_space_left_action is set correctly
  ansible.builtin.assert:
    that:
      - auditd_space_left_action is defined
      - auditd_space_left_action is string
      - auditd_space_left_action|lower in [ "ignore", "syslog", "rotate", "email", "exec", "suspend", "single", "halt" ]

- name: Test if auditd_verify_email is set correctly
  ansible.builtin.assert:
    that:
      - auditd_verify_email is defined
      - auditd_verify_email is string
      - auditd_verify_email|lower in [ "yes", "no" ]

- name: Test if auditd_action_mail_acct is set correctly
  ansible.builtin.assert:
    that:
      - auditd_action_mail_acct is defined
      - auditd_action_mail_acct is string

- name: Test if auditd_admin_space_left is set correctly
  ansible.builtin.assert:
    that:
      - auditd_admin_space_left is defined
      - auditd_admin_space_left is number
      - auditd_admin_space_left >= 0
      - auditd_admin_space_left <= 100

- name: Test if auditd_admin_space_left_action is set correctly
  ansible.builtin.assert:
    that:
      - auditd_admin_space_left_action is defined
      - auditd_admin_space_left_action is string
      - auditd_admin_space_left_action|lower in [ "ignore", "syslog", "rotate", "email", "exec", "suspend", "single", "halt" ]

- name: Test if auditd_disk_full_action is set correctly
  ansible.builtin.assert:
    that:
      - auditd_disk_full_action is defined
      - auditd_disk_full_action is string
      - auditd_disk_full_action|lower in [ "ignore", "syslog", "rotate", "exec", "suspend", "single", "halt" ]

- name: Test if auditd_disk_error_action is set correctly
  ansible.builtin.assert:
    that:
      - auditd_disk_error_action is defined
      - auditd_disk_error_action is string
      - auditd_disk_error_action|lower in [ "ignore", "syslog", "rotate", "exec", "suspend", "single", "halt" ]

- name: Test if auditd_use_libwrap is set correctly
  ansible.builtin.assert:
    that:
      - auditd_use_libwrap is defined
      - auditd_use_libwrap is string
      - auditd_use_libwrap|lower in [ "yes", "no" ]

- name: Test if auditd_tcp_listen_queue is set correctly
  ansible.builtin.assert:
    that:
      - auditd_tcp_listen_queue is defined
      - auditd_tcp_listen_queue is number
      - auditd_tcp_listen_queue >= 0

- name: Test if auditd_tcp_max_per_addr is set correctly
  ansible.builtin.assert:
    that:
      - auditd_tcp_max_per_addr is defined
      - auditd_tcp_max_per_addr is number
      - auditd_tcp_max_per_addr >= 0
      - auditd_tcp_max_per_addr <= 1024

- name: Test if auditd_tcp_client_max_idle is set correctly
  ansible.builtin.assert:
    that:
      - auditd_tcp_client_max_idle is defined
      - auditd_tcp_client_max_idle is number
      - auditd_tcp_client_max_idle >= 0

- name: Test if auditd_enable_krb5 is set correctly
  ansible.builtin.assert:
    that:
      - auditd_enable_krb5 is defined
      - auditd_enable_krb5 is string
      - auditd_enable_krb5|lower in [ "yes", "no" ]

- name: Test if auditd_krb5_principal is set correctly
  ansible.builtin.assert:
    that:
      - auditd_krb5_principal is defined
      - auditd_krb5_principal is string

- name: Test if auditd_distribute_network is set correctly
  ansible.builtin.assert:
    that:
      - auditd_distribute_network is defined
      - auditd_distribute_network is string
      - auditd_distribute_network|lower in [ "yes", "no" ]

- name: Test if auditd_manage_rules is set correctly
  ansible.builtin.assert:
    that:
      - auditd_manage_rules is defined
      - auditd_manage_rules is boolean

- name: Test if auditd_rules is set correctly
  ansible.builtin.assert:
    that:
      - auditd_rules is iterable
  when:
    - auditd_rules is defined

- name: Test if item.file in auditd_rules is set correctly
  ansible.builtin.assert:
    that:
      - item.keyname is defined
      - item.keyname is string
  loop: "{{ auditd_rules }}"
  loop_control:
    label: "{{ item.file | default('none') }}"
  when:
    - auditd_rules is defined
    - item.file is defined

- name: Test if item.permission in auditd_rules is set correctly
  ansible.builtin.assert:
    that:
      - item.permission|lower in [ "attribute_change", "execute", "read", "write" ]
  loop: "{{ auditd_rules }}"
  loop_control:
    label: "{{ item.file | default('none') }}"
  when:
    - auditd_rules is defined
    - auditd_rules is string
    - item.permission is defined
    - item.permission is string

- name: Test if item in auditd_rules is set correctly
  ansible.builtin.assert:
    that:
      - item.action is defined
      - item.action is string
      - item.action|lower in [ "always", "never" ]
      - item.filter is defined
      - item.filter is string
      - item.filter|lower in [ "exclude", "exit", "user" ]
  loop: "{{ auditd_rules }}"
  loop_control:
    label: "{{ item.syscall | default('none') }}"
  when:
    - auditd_rules is defined
    - auditd_rules is string
    - item.syscall is defined
    - item.syscall is string

- name: Test if item.filters in auditd_rules is set correctly
  ansible.builtin.assert:
    that:
      - item.filters is iterable
  loop: "{{ auditd_rules }}"
  loop_control:
    label: "{{ item.file | default('none') }}"
  when:
    - auditd_rules is defined
    - auditd_rules is string
    - item.filters is defined
    - item.filters is string

- name: Test if auditd_disp_qos is set correctly
  ansible.builtin.assert:
    that:
      - auditd_disp_qos is defined
      - auditd_disp_qos is string
      - auditd_disp_qos|lower in [ "lossy", "lossless" ]
    fail_msg: "auditd_disp_qos must be one of 'lossy', 'lossless'."

- name: Test if auditd_dispatcher is set correctly
  ansible.builtin.assert:
    that:
      - auditd_dispatcher is defined
      - auditd_dispatcher is string
