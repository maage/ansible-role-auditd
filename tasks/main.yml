---
# tasks file for auditd

- name: Set platform/version specific variables
  include_vars: "{{ __auditd_vars_file }}"
  loop:
    - "{{ ansible_facts['os_family'] }}.yml"
    - "{{ ansible_facts['distribution'] }}.yml"
    - >-
      {{ ansible_facts['distribution'] ~ '_' ~
      ansible_facts['distribution_major_version'] }}.yml
    - >-
      {{ ansible_facts['distribution'] ~ '_' ~
      ansible_facts['distribution_version'] }}.yml
  vars:
    __auditd_vars_file: "{{ role_path }}/vars/{{ item }}"
  when: __auditd_vars_file is file

- name: import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: install requirements
  ansible.builtin.package:
    name: bash
    state: present

- name: install audit
  ansible.builtin.package:
    name: "{{ auditd_packages }}"
    state: present

- name: configure auditd
  ansible.builtin.template:
    src: "{{ auditd_config_file }}.j2"
    dest: "{{ auditd_config_directory }}/{{ auditd_config_file }}"
    mode: "0640"
  notify:
    - restart auditd

- name: create rules.d directory
  ansible.builtin.file:
    path: "{{ auditd_config_directory }}/rules.d"
    state: directory
    mode: "0750"

- name: place custom.rules
  ansible.builtin.template:
    src: custom.rules.j2
    dest: "{{ auditd_config_directory }}/rules.d/{{ auditd_rules_file }}"
    mode: "0664"
  notify:
    - run augenrules
  when:
    - auditd_manage_rules | bool

- name: start and enable auditd
  ansible.builtin.service:
    name: "{{ auditd_service }}"
    state: started
    enabled: yes
